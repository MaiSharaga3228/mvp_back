services:
  postgres:
    image: postgres:latest
    container_name: postgres_container
    networks:
      - main-network
    environment:
      POSTGRES_DB: $POSTGRES_DB_NAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      PGDATA: $PGDATA
    ports:
      - ${EXTERNAL_POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB_NAME} -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 3s
      retries: 3
  django:
    build: .
    container_name: django_container
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:${APP_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    networks:
      - main-network
    environment:
      POSTGRES_DB_NAME: $POSTGRES_DB_NAME
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_HOST: postgres
      POSTGRES_PORT: $POSTGRES_PORT
      SECRET_KEY: $SECRET_KEY
      APP_HOST: $APP_HOST
    ports:
      - ${EXTERNAL_APP_PORT}:${APP_PORT}
volumes:
  pgdata:
    driver: local
networks:
  main-network:
    driver: bridge
